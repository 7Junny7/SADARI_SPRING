<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 스캔한 패지키 내부의 클래스 중 Controller 어노테이션을 가지고 있는 클래스들을 Controller로 로딩하도록 
		한다 -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<!-- 정적파일(이미지, 사운드, 동영상, JS, CSS 등등) 경로 셋팅 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<!-- Controller의 메서드에서 반환하는 문자열 앞 뒤에 붙힐 경로 정보를 셋팅한다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- 스캔할 bean들이 모여있는 패키지를 지정한다. -->
	<context:component-scan base-package="co.soft.controller" />
	<context:component-scan base-package="co.soft.dao" />
	<context:component-scan base-package="co.soft.service" />

	<!-- properties 파일의 내용을 사용할 수 있도록 Bean을 정의한다 -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="location">
			<beans:value>/WEB-INF/properties/db.properties</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean class="org.apache.commons.dbcp2.BasicDataSource" id="basic_data_source">
		<beans:property name="driverClassName" value="${db.classname}" />
		<beans:property name="url" value="${db.url}" />
		<beans:property name="username" value="${db.username}" />
		<beans:property name="password" value="${db.password}" />
	</beans:bean>

	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSession">
		<beans:property name="dataSource" ref="basic_data_source" />
		<beans:property name="mapperLocations" value="/WEB-INF/mapping/*.xml" />
	</beans:bean>

	<beans:bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
		<beans:constructor-arg ref="sqlSession" index="0" />
	</beans:bean>

	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean class='co.soft.interceptor.TopMenuInterceptor' />
		</interceptor>
		<!-- 
		<interceptor>
			<mapping path="/user/modify" />
			<mapping path="/user/logout" />
			<mapping path="/board/*" />
			<exclude-mapping path="/board/main" />
			<beans:bean
				class='co.soft.interceptor.CheckLoginInterceptor' />
		</interceptor>
		<interceptor>
			<mapping path="/board/modify" />
			<mapping path="/board/delete" />
			<beans:bean
				class='co.soft.interceptor.CheckWriterInterceptor' />
		</interceptor>
		 -->
	</interceptors>

	<!-- MessageSource를 등록한다 -->
	<beans:bean
		class='org.springframework.context.support.ReloadableResourceBundleMessageSource'
		id='messageSource'>
		<beans:property name="basenames">
			<beans:list>
				<beans:value>/WEB-INF/properties/error_message</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Message 접근을 위한 접근자 등록 -->
	<beans:bean
		class='org.springframework.context.support.MessageSourceAccessor'>
		<beans:constructor-arg ref='messageSource' />
	</beans:bean>

	<beans:bean
		class='org.springframework.web.multipart.support.StandardServletMultipartResolver'
		id='multipartResolver' />



</beans:beans>
